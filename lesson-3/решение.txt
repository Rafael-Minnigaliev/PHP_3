1)
1. Сплошное одиночество (Singletonitis) - class DB файл DB.php.
2. Шифрованный (таинственный) код (Cryptic Code) - файл index.php, строка 15.
3. Могли бы появиться но написано правильно: Затычка на ввод (Input kludge), файл CUser.php.
4. Могли бы появиться но написано правильно: Жёсткое кодирование (Hard Code) если бы не использовали const class DB файл DB.php.
5. Могли бы появиться но написано правильно: Божественный объект (God Object), если бы методы и контроллеры не разделилил на разные классы.
6. Могли бы появиться но написано правильно: Приватизация (Privatization), файл Controller.php если бы protected function были private.


2)
Антипаттерны в коде:
2. решение: изменить на более понятные названия
4. решение: использовать константы, конфигурационные файлы но не переборщить.

Антипаттерны в ООП:
1. решение: перестать использовать Singleton так как они сложно поддаются тестированию
5. решение: придерживаться принципа SOLID, S - принцип единственной ответственности.
6. решение: функционально важные методы в классе лучше объявлять как защищённые protected.

Архитектурные антипаттерны:
3. решение: всегда проверять поступающие данные.


